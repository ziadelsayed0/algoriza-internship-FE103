{"ast":null,"code":"export default function validatePassword(passwordInput, confirmPasswordInput, passwordStore, confirmedPasswordStore, passwordError) {\n  if (/[A-Z]/g.test(passwordStore.value) && /[0-9]/g.test(passwordStore.value) && /[a-z]/g.test(passwordStore.value) && passwordStore.value == confirmedPasswordStore.value || passwordStore.value.length > 8) {\n    passwordInput.value.classList.add(\"valid\");\n    confirmPasswordInput.value.classList.add(\"valid\");\n    passwordError.value = \"\";\n  } else {\n    passwordError.value = \" Password must contain at least 8 characters, must contain at least one capital letter, one small letter, and a number.\";\n\n    //add invalid classes to password and confirmed password\n    //and remove valid classes in case of it's extisence.\n\n    passwordInput.value.classList.add(\"invalid\");\n    confirmPasswordInput.value.classList.add(\"invalid\");\n    confirmPasswordInput.value.classList.contains(\"valid\") ? confirmPasswordInput.value.classList.remove(\"valid\") : \"\";\n    passwordInput.value.classList.contains(\"valid\") ? passwordInput.value.classList.remove(\"valid\") : \"\";\n  }\n}","map":{"version":3,"names":["validatePassword","passwordInput","confirmPasswordInput","passwordStore","confirmedPasswordStore","passwordError","test","value","length","classList","add","contains","remove"],"sources":["C:/Users/AFRAAD-PC1/Desktop/Zoz/algoriza-internship-FE103/src/components/Composable/PasswordValidator.js"],"sourcesContent":["export default function validatePassword(\r\n  passwordInput,\r\n  confirmPasswordInput,\r\n  passwordStore,\r\n  confirmedPasswordStore,\r\n  passwordError\r\n) {\r\n  if (\r\n    (/[A-Z]/g.test(passwordStore.value) &&\r\n      /[0-9]/g.test(passwordStore.value) &&\r\n      /[a-z]/g.test(passwordStore.value) &&\r\n      passwordStore.value ==\r\n        confirmedPasswordStore.value) ||\r\n    passwordStore.value.length > 8\r\n  ) {\r\n    passwordInput.value.classList.add(\"valid\");\r\n    confirmPasswordInput.value.classList.add(\"valid\");\r\n    passwordError.value = \"\";\r\n  } else {\r\n    passwordError.value =\r\n      \" Password must contain at least 8 characters, must contain at least one capital letter, one small letter, and a number.\";\r\n\r\n    //add invalid classes to password and confirmed password\r\n    //and remove valid classes in case of it's extisence.\r\n\r\n    passwordInput.value.classList.add(\"invalid\");\r\n    confirmPasswordInput.value.classList.add(\"invalid\");\r\n\r\n    confirmPasswordInput.value.classList.contains(\"valid\")\r\n      ? confirmPasswordInput.value.classList.remove(\"valid\")\r\n      : \"\";\r\n    passwordInput.value.classList.contains(\"valid\")\r\n      ? passwordInput.value.classList.remove(\"valid\")\r\n      : \"\";\r\n  }\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,gBAAgBA,CACtCC,aAAa,EACbC,oBAAoB,EACpBC,aAAa,EACbC,sBAAsB,EACtBC,aAAa,EACb;EACA,IACG,QAAQ,CAACC,IAAI,CAACH,aAAa,CAACI,KAAK,CAAC,IACjC,QAAQ,CAACD,IAAI,CAACH,aAAa,CAACI,KAAK,CAAC,IAClC,QAAQ,CAACD,IAAI,CAACH,aAAa,CAACI,KAAK,CAAC,IAClCJ,aAAa,CAACI,KAAK,IACjBH,sBAAsB,CAACG,KAAK,IAChCJ,aAAa,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC,EAC9B;IACAP,aAAa,CAACM,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IAC1CR,oBAAoB,CAACK,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IACjDL,aAAa,CAACE,KAAK,GAAG,EAAE;EAC1B,CAAC,MAAM;IACLF,aAAa,CAACE,KAAK,GACjB,yHAAyH;;IAE3H;IACA;;IAEAN,aAAa,CAACM,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IAC5CR,oBAAoB,CAACK,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IAEnDR,oBAAoB,CAACK,KAAK,CAACE,SAAS,CAACE,QAAQ,CAAC,OAAO,CAAC,GAClDT,oBAAoB,CAACK,KAAK,CAACE,SAAS,CAACG,MAAM,CAAC,OAAO,CAAC,GACpD,EAAE;IACNX,aAAa,CAACM,KAAK,CAACE,SAAS,CAACE,QAAQ,CAAC,OAAO,CAAC,GAC3CV,aAAa,CAACM,KAAK,CAACE,SAAS,CAACG,MAAM,CAAC,OAAO,CAAC,GAC7C,EAAE;EACR;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}