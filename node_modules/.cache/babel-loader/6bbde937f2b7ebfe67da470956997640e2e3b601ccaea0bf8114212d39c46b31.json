{"ast":null,"code":"import { defineStore } from \"pinia\";\nexport const useUsersStore = defineStore(\"Users\", {\n  state: () => {\n    return {\n      data: [],\n      isLoggedIn: false\n    };\n  },\n  getters: {\n    checkUserExistence() {\n      return email => this.data.find(el => el.email === email);\n    }\n  },\n  actions: {\n    async getUsers() {\n      const res = await fetch(\"http://localhost:8080/users\");\n      const users = await res.json();\n      this.data = users;\n    },\n    logIn() {\n      sessionStorage.setItem(\"loggedIn\", \"true\");\n      this.isLoggedIn = true;\n      console.log(this.isLoggedIn);\n    },\n    addUser(user) {\n      fetch(\"http://localhost:8080/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: user\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useUsersStore","state","data","isLoggedIn","getters","checkUserExistence","email","find","el","actions","getUsers","res","fetch","users","json","logIn","sessionStorage","setItem","console","log","addUser","user","method","headers","body"],"sources":["C:/Users/AFRAAD-PC1/Desktop/Zoz/algoriza-internship-FE103/src/components/stores/usersStore.js"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nexport const useUsersStore = defineStore(\"Users\", {\r\n  state: () => {\r\n    return { data: [], isLoggedIn: false };\r\n  },\r\n  getters: {\r\n    checkUserExistence() {\r\n      return (email) =>\r\n        this.data.find((el) => el.email === email);\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    async getUsers() {\r\n      const res = await fetch(\r\n        \"http://localhost:8080/users\"\r\n      );\r\n\r\n      const users = await res.json();\r\n\r\n      this.data = users;\r\n    },\r\n    logIn() {\r\n      sessionStorage.setItem(\"loggedIn\", \"true\");\r\n      this.isLoggedIn = true;\r\n      console.log(this.isLoggedIn);\r\n    },\r\n\r\n    addUser(user) {\r\n      fetch(\"http://localhost:8080/users\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: user,\r\n      });\r\n    },\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC,OAAO,EAAE;EAChDE,KAAK,EAAEA,CAAA,KAAM;IACX,OAAO;MAAEC,IAAI,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAM,CAAC;EACxC,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAAA,EAAG;MACnB,OAAQC,KAAK,IACX,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACF,KAAK,KAAKA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDG,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,6BACF,CAAC;MAED,MAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE9B,IAAI,CAACZ,IAAI,GAAGW,KAAK;IACnB,CAAC;IACDE,KAAKA,CAAA,EAAG;MACNC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MAC1C,IAAI,CAACd,UAAU,GAAG,IAAI;MACtBe,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,UAAU,CAAC;IAC9B,CAAC;IAEDiB,OAAOA,CAACC,IAAI,EAAE;MACZT,KAAK,CAAC,6BAA6B,EAAE;QACnCU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEH;MACR,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}