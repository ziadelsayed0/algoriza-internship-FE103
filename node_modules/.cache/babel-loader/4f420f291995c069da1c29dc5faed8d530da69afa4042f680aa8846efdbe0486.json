{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6a3b5c59\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mx-auto w-[27.8vw] ont-SFProDisplay mt-24\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center text-[28px] font-semibold mb-10\"\n}, \" Register \", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"mb-5\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\",\n  class: \"block font-medium text-sm\"\n}, \"Email address\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"text-xs text-red-600 font-SFProDisplay\"\n};\nconst _hoisted_6 = {\n  class: \"password\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\",\n  class: \"block font-medium text-sm\"\n}, \"Password\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"text-xs text-red-600 font-SFProDisplay\"\n};\nconst _hoisted_9 = {\n  class: \"password\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\",\n  class: \"block font-medium text-sm\"\n}, \"Confirm Password\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"block text-center mt-5 text-[#4f4f4f] text-base\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", null, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"w-full nisma\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n    ref: \"emailInput\",\n    novalidate: \"\",\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.emailError), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"w-full mb-5\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    ref: \"passwordInput\",\n    placeholder: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($setup.passwordError), 1 /* TEXT */), _createCommentVNode(\" <span><img src=\\\"../../assets/password.png\\\" /></span> \")]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"w-full mb-5\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.confirm_password = $event),\n    ref: \"confirmPasswordInput\",\n    placeholder: \"confirm password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.confirm_password]]), _createCommentVNode(\" <span><img src=\\\"../../assets/password.png\\\" /></span> \")]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = _withModifiers($event => $setup.registerHandler(), [\"prevent\"])),\n    class: \"bg-lightBlue px-4 py-2 text-center rounded-md text-white w-full\"\n  }, \" Submit \")]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", null, _toDisplayString($setup.emailExistenceError), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createTextVNode(\" Already have an account? \"), _createVNode(_component_router_link, {\n    class: \"text-lightBlue\",\n    to: {\n      name: 'login',\n      path: '/login'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Sign in \")]),\n    _: 1 /* STABLE */\n  })])])]), _createTextVNode(\" \" + _toDisplayString($setup.email) + \" \" + _toDisplayString($setup.password) + \" \" + _toDisplayString($setup.confirm_password), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","$setup","email","$event","ref","novalidate","placeholder","_hoisted_5","_toDisplayString","emailError","_hoisted_6","_hoisted_7","password","_hoisted_8","passwordError","_createCommentVNode","_hoisted_9","_hoisted_10","confirm_password","onClick","_cache","_withModifiers","registerHandler","_hoisted_11","emailExistenceError","_createVNode","_component_router_link","to","name","path"],"sources":["C:\\Users\\AFRAAD-PC1\\Desktop\\Zoz\\algoriza-internship-FE103\\src\\components\\Login\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"mx-auto w-[27.8vw] ont-SFProDisplay mt-24\">\r\n    <h1 class=\"text-center text-[28px] font-semibold mb-10\">\r\n      Register\r\n    </h1>\r\n    <form>\r\n      <div class=\"mb-5\">\r\n        <label for=\"\" class=\"block font-medium text-sm\"\r\n          >Email address</label\r\n        >\r\n        <input\r\n          type=\"email\"\r\n          class=\"w-full nisma\"\r\n          v-model=\"email\"\r\n          ref=\"emailInput\"\r\n          novalidate\r\n          placeholder=\"Email\"\r\n        />\r\n        <p class=\"text-xs text-red-600 font-SFProDisplay\">\r\n          {{ emailError }}\r\n        </p>\r\n      </div>\r\n      <div class=\"password\">\r\n        <label for=\"\" class=\"block font-medium text-sm\"\r\n          >Password</label\r\n        >\r\n        <input\r\n          type=\"password\"\r\n          class=\"w-full mb-5\"\r\n          v-model=\"password\"\r\n          ref=\"passwordInput\"\r\n          placeholder=\"password\"\r\n        />\r\n        <p class=\"text-xs text-red-600 font-SFProDisplay\">\r\n          {{ passwordError }}\r\n        </p>\r\n        <!-- <span><img src=\"../../assets/password.png\" /></span> -->\r\n      </div>\r\n      <div class=\"password\">\r\n        <label for=\"\" class=\"block font-medium text-sm\"\r\n          >Confirm Password</label\r\n        >\r\n        <input\r\n          type=\"password\"\r\n          class=\"w-full mb-5\"\r\n          v-model=\"confirm_password\"\r\n          ref=\"confirmPasswordInput\"\r\n          placeholder=\"confirm password\"\r\n        />\r\n        <!-- <span><img src=\"../../assets/password.png\" /></span> -->\r\n      </div>\r\n      <div>\r\n        <button\r\n          @click.prevent=\"registerHandler()\"\r\n          class=\"bg-lightBlue px-4 py-2 text-center rounded-md text-white w-full\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n      <div\r\n        class=\"block text-center mt-5 text-[#4f4f4f] text-base\"\r\n      >\r\n        <p>{{ emailExistenceError }}</p>\r\n        <p>\r\n          Already have an account?\r\n          <router-link\r\n            class=\"text-lightBlue\"\r\n            :to=\"{ name: 'login', path: '/login' }\"\r\n            >Sign in\r\n          </router-link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n    {{ email }}\r\n    {{ password }}\r\n    {{ confirm_password }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport validatePassword from \"../Composable/PasswordValidator.js\";\r\nimport validateEmail from \"../Composable/EmailValidator.js\";\r\nimport { useUsersStore } from \"../stores/usersStore.js\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  setup() {\r\n    const email = ref(\"\");\r\n    const password = ref(\"\");\r\n    const confirm_password = ref(\"\");\r\n    const passwordError = ref(\"\");\r\n    const emailError = ref(\"\");\r\n    const emailInput = ref(null);\r\n    const passwordInput = ref(null);\r\n    const confirmPasswordInput = ref(null);\r\n    const emailExistenceError = ref(\"\");\r\n    const router = useRouter();\r\n\r\n    async function registerHandler() {\r\n      validatePassword(\r\n        passwordInput,\r\n        confirmPasswordInput,\r\n        password,\r\n        confirm_password,\r\n        passwordError\r\n      );\r\n\r\n      validateEmail(emailInput, email, emailError);\r\n\r\n      if (passwordError.value === \"\" && emailError.value === \"\") {\r\n        const users = useUsersStore();\r\n        const userExists = users.checkUserExistence(email.value);\r\n\r\n        if (userExists) {\r\n          emailExistenceError.value = \"This email already exists\";\r\n        } else {\r\n          const newUser = {\r\n            email: email.value,\r\n            password: password.value,\r\n          };\r\n\r\n          try {\r\n            // Attempt to add the user\r\n            const stringifiedUser = JSON.stringify(newUser);\r\n            users.addUser(stringifiedUser);\r\n\r\n            // Redirect to login after successful registration\r\n            setTimeout(() => {\r\n              router.push(\"/login\");\r\n            }, 1000);\r\n          } catch (error) {\r\n            // Handle error during user creation\r\n            console.error(\"Error creating user:\", error);\r\n            // Optionally show an error message to the user\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      emailError,\r\n      email,\r\n      password,\r\n      confirm_password,\r\n      registerHandler,\r\n      passwordError,\r\n      emailInput,\r\n      passwordInput,\r\n      confirmPasswordInput,\r\n      emailExistenceError,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\ninput {\r\n  padding: 11px 12px 12px;\r\n  background: #f2f2f2;\r\n  border-radius: 4px;\r\n}\r\n\r\n.password {\r\n  position: relative;\r\n}\r\n.password span {\r\n  content: url(\"../../assets/password.png\");\r\n  right: 15px;\r\n  top: 35px;\r\n  position: absolute;\r\n}\r\n\r\ninput.invalid {\r\n  border: red solid 1px;\r\n}\r\n\r\ninput.valid {\r\n  border: green solid 1px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAA2C;gEACpDC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAA6C,GAAC,YAExD;;EAEOA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAEC;EAFMC,GAAG,EAAC,EAAE;EAACF,KAAK,EAAC;GACjB,eAAa;;EAUbA,KAAK,EAAC;AAAwC;;EAI9CA,KAAK,EAAC;AAAU;gEACnBC,mBAAA,CAEC;EAFMC,GAAG,EAAC,EAAE;EAACF,KAAK,EAAC;GACjB,UAAQ;;EASRA,KAAK,EAAC;AAAwC;;EAK9CA,KAAK,EAAC;AAAU;iEACnBC,mBAAA,CAEC;EAFMC,GAAG,EAAC,EAAE;EAACF,KAAK,EAAC;GACjB,kBAAgB;;EAoBnBA,KAAK,EAAC;AAAiD;;;uBA3D7DG,mBAAA,CA2EM,OA3ENC,UA2EM,GA1EJC,UAEK,EACLJ,mBAAA,CAmEO,eAlELA,mBAAA,CAeM,OAfNK,UAeM,GAdJC,UAEC,E,gBACDN,mBAAA,CAOE;IANAO,IAAI,EAAC,OAAO;IACZR,KAAK,EAAC,cAAc;+DACXS,MAAA,CAAAC,KAAK,GAAAC,MAAA;IACdC,GAAG,EAAC,YAAY;IAChBC,UAAU,EAAV,EAAU;IACVC,WAAW,EAAC;iDAHHL,MAAA,CAAAC,KAAK,E,GAKhBT,mBAAA,CAEI,KAFJc,UAEI,EAAAC,gBAAA,CADCP,MAAA,CAAAQ,UAAU,iB,GAGjBhB,mBAAA,CAeM,OAfNiB,UAeM,GAdJC,UAEC,E,gBACDlB,mBAAA,CAME;IALAO,IAAI,EAAC,UAAU;IACfR,KAAK,EAAC,aAAa;+DACVS,MAAA,CAAAW,QAAQ,GAAAT,MAAA;IACjBC,GAAG,EAAC,eAAe;IACnBE,WAAW,EAAC;iDAFHL,MAAA,CAAAW,QAAQ,E,GAInBnB,mBAAA,CAEI,KAFJoB,UAEI,EAAAL,gBAAA,CADCP,MAAA,CAAAa,aAAa,kBAElBC,mBAAA,4DAA6D,C,GAE/DtB,mBAAA,CAYM,OAZNuB,UAYM,GAXJC,WAEC,E,gBACDxB,mBAAA,CAME;IALAO,IAAI,EAAC,UAAU;IACfR,KAAK,EAAC,aAAa;+DACVS,MAAA,CAAAiB,gBAAgB,GAAAf,MAAA;IACzBC,GAAG,EAAC,sBAAsB;IAC1BE,WAAW,EAAC;iDAFHL,MAAA,CAAAiB,gBAAgB,E,GAI3BH,mBAAA,4DAA6D,C,GAE/DtB,mBAAA,CAOM,cANJA,mBAAA,CAKS;IAJN0B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAAlB,MAAA,IAAUF,MAAA,CAAAqB,eAAe;IAC/B9B,KAAK,EAAC;KACP,UAED,E,GAEFC,mBAAA,CAYM,OAZN8B,WAYM,GATJ9B,mBAAA,CAAgC,WAAAe,gBAAA,CAA1BP,MAAA,CAAAuB,mBAAmB,kBACzB/B,mBAAA,CAOI,Y,iBAPD,4BAED,GAAAgC,YAAA,CAIcC,sBAAA;IAHZlC,KAAK,EAAC,gBAAgB;IACrBmC,EAAE,EAAE;MAAAC,IAAA;MAAAC,IAAA;IAAA;;sBACJ,MACH,C,iBADG,UACH,E;;6BAGC,GACP,GAAArB,gBAAA,CAAGP,MAAA,CAAAC,KAAK,IAAG,GACX,GAAAM,gBAAA,CAAGP,MAAA,CAAAW,QAAQ,IAAG,GACd,GAAAJ,gBAAA,CAAGP,MAAA,CAAAiB,gBAAgB,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}