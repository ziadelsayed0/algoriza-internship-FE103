{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport validatePassword from \"../Composable/PasswordValidator.js\";\nimport validateEmail from \"../Composable/EmailValidator.js\";\nimport { useUsersStore } from \"../stores/usersStore.js\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"Register\",\n  setup() {\n    const email = ref(\"\");\n    const password = ref(\"\");\n    const confirm_password = ref(\"\");\n    const passwordError = ref(\"\");\n    const emailError = ref(\"\");\n    const emailInput = ref(null);\n    const passwordInput = ref(null);\n    const confirmPasswordInput = ref(null);\n    const emailExistenceError = ref(\"\");\n    const router = useRouter();\n    async function registerHandler() {\n      validatePassword(passwordInput, confirmPasswordInput, password, confirm_password, passwordError);\n      validateEmail(emailInput, email, emailError);\n      if (passwordError.value === \"\" && emailError.value === \"\") {\n        const users = useUsersStore();\n        const userExists = users.checkUserExistence(email.value);\n        if (userExists) {\n          emailExistenceError.value = \"This email already exists\";\n        } else {\n          const newUser = {\n            email: email.value,\n            password: password.value\n          };\n          try {\n            // Attempt to add the user\n            const stringifiedUser = JSON.stringify(newUser);\n            users.addUser(stringifiedUser);\n\n            // Redirect to login after successful registration\n            setTimeout(() => {\n              router.push(\"/login\");\n            }, 1000);\n          } catch (error) {\n            // Handle error during user creation\n            console.error(\"Error creating user:\", error);\n            // Optionally show an error message to the user\n          }\n        }\n      }\n    }\n\n    return {\n      emailError,\n      email,\n      password,\n      confirm_password,\n      registerHandler,\n      passwordError,\n      emailInput,\n      passwordInput,\n      confirmPasswordInput,\n      emailExistenceError\n    };\n  }\n};","map":{"version":3,"names":["ref","validatePassword","validateEmail","useUsersStore","useRouter","name","setup","email","password","confirm_password","passwordError","emailError","emailInput","passwordInput","confirmPasswordInput","emailExistenceError","router","registerHandler","value","users","userExists","checkUserExistence","newUser","stringifiedUser","JSON","stringify","addUser","setTimeout","push","error","console"],"sources":["C:\\Users\\AFRAAD-PC1\\Desktop\\Zoz\\algoriza-internship-FE103\\src\\components\\Login\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"mx-auto w-[27.8vw] ont-SFProDisplay mt-24\">\r\n    <h1 class=\"text-center text-[28px] font-semibold mb-10\">\r\n      Register\r\n    </h1>\r\n    <form>\r\n      <div class=\"mb-5\">\r\n        <label for=\"\" class=\"block font-medium text-sm\"\r\n          >Email address</label\r\n        >\r\n        <input\r\n          type=\"email\"\r\n          class=\"w-full nisma\"\r\n          v-model=\"email\"\r\n          ref=\"emailInput\"\r\n          novalidate\r\n          placeholder=\"Email\"\r\n        />\r\n        <p class=\"text-xs text-red-600 font-SFProDisplay\">\r\n          {{ emailError }}\r\n        </p>\r\n      </div>\r\n      <div class=\"password\">\r\n        <label for=\"\" class=\"block font-medium text-sm\"\r\n          >Password</label\r\n        >\r\n        <input\r\n          type=\"password\"\r\n          class=\"w-full mb-5\"\r\n          v-model=\"password\"\r\n          ref=\"passwordInput\"\r\n          placeholder=\"password\"\r\n        />\r\n        <p class=\"text-xs text-red-600 font-SFProDisplay\">\r\n          {{ passwordError }}\r\n        </p>\r\n        <!-- <span><img src=\"../../assets/password.png\" /></span> -->\r\n      </div>\r\n      <div class=\"password\">\r\n        <label for=\"\" class=\"block font-medium text-sm\"\r\n          >Confirm Password</label\r\n        >\r\n        <input\r\n          type=\"password\"\r\n          class=\"w-full mb-5\"\r\n          v-model=\"confirm_password\"\r\n          ref=\"confirmPasswordInput\"\r\n          placeholder=\"confirm password\"\r\n        />\r\n        <!-- <span><img src=\"../../assets/password.png\" /></span> -->\r\n      </div>\r\n      <div>\r\n        <button\r\n          @click.prevent=\"registerHandler()\"\r\n          class=\"bg-lightBlue px-4 py-2 text-center rounded-md text-white w-full\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n      <div\r\n        class=\"block text-center mt-5 text-[#4f4f4f] text-base\"\r\n      >\r\n        <p>{{ emailExistenceError }}</p>\r\n        <p>\r\n          Already have an account?\r\n          <router-link\r\n            class=\"text-lightBlue\"\r\n            :to=\"{ name: 'login', path: '/login' }\"\r\n            >Sign in\r\n          </router-link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n    {{ email }}\r\n    {{ password }}\r\n    {{ confirm_password }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport validatePassword from \"../Composable/PasswordValidator.js\";\r\nimport validateEmail from \"../Composable/EmailValidator.js\";\r\nimport { useUsersStore } from \"../stores/usersStore.js\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  setup() {\r\n    const email = ref(\"\");\r\n    const password = ref(\"\");\r\n    const confirm_password = ref(\"\");\r\n    const passwordError = ref(\"\");\r\n    const emailError = ref(\"\");\r\n    const emailInput = ref(null);\r\n    const passwordInput = ref(null);\r\n    const confirmPasswordInput = ref(null);\r\n    const emailExistenceError = ref(\"\");\r\n    const router = useRouter();\r\n\r\n    async function registerHandler() {\r\n      validatePassword(\r\n        passwordInput,\r\n        confirmPasswordInput,\r\n        password,\r\n        confirm_password,\r\n        passwordError\r\n      );\r\n\r\n      validateEmail(emailInput, email, emailError);\r\n\r\n      if (passwordError.value === \"\" && emailError.value === \"\") {\r\n        const users = useUsersStore();\r\n        const userExists = users.checkUserExistence(email.value);\r\n\r\n        if (userExists) {\r\n          emailExistenceError.value = \"This email already exists\";\r\n        } else {\r\n          const newUser = {\r\n            email: email.value,\r\n            password: password.value,\r\n          };\r\n\r\n          try {\r\n            // Attempt to add the user\r\n            const stringifiedUser = JSON.stringify(newUser);\r\n            users.addUser(stringifiedUser);\r\n\r\n            // Redirect to login after successful registration\r\n            setTimeout(() => {\r\n              router.push(\"/login\");\r\n            }, 1000);\r\n          } catch (error) {\r\n            // Handle error during user creation\r\n            console.error(\"Error creating user:\", error);\r\n            // Optionally show an error message to the user\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      emailError,\r\n      email,\r\n      password,\r\n      confirm_password,\r\n      registerHandler,\r\n      passwordError,\r\n      emailInput,\r\n      passwordInput,\r\n      confirmPasswordInput,\r\n      emailExistenceError,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\ninput {\r\n  padding: 11px 12px 12px;\r\n  background: #f2f2f2;\r\n  border-radius: 4px;\r\n}\r\n\r\n.password {\r\n  position: relative;\r\n}\r\n.password span {\r\n  content: url(\"../../assets/password.png\");\r\n  right: 15px;\r\n  top: 35px;\r\n  position: absolute;\r\n}\r\n\r\ninput.invalid {\r\n  border: red solid 1px;\r\n}\r\n\r\ninput.valid {\r\n  border: green solid 1px;\r\n}\r\n</style>\r\n"],"mappings":";AAgFA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,gBAAe,MAAO,oCAAoC;AACjE,OAAOC,aAAY,MAAO,iCAAiC;AAC3D,SAASC,aAAY,QAAS,yBAAyB;AACvD,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,gBAAe,GAAIT,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMU,aAAY,GAAIV,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMW,UAAS,GAAIX,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMY,UAAS,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMa,aAAY,GAAIb,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMc,oBAAmB,GAAId,GAAG,CAAC,IAAI,CAAC;IACtC,MAAMe,mBAAkB,GAAIf,GAAG,CAAC,EAAE,CAAC;IACnC,MAAMgB,MAAK,GAAIZ,SAAS,CAAC,CAAC;IAE1B,eAAea,eAAeA,CAAA,EAAG;MAC/BhB,gBAAgB,CACdY,aAAa,EACbC,oBAAoB,EACpBN,QAAQ,EACRC,gBAAgB,EAChBC,aACF,CAAC;MAEDR,aAAa,CAACU,UAAU,EAAEL,KAAK,EAAEI,UAAU,CAAC;MAE5C,IAAID,aAAa,CAACQ,KAAI,KAAM,EAAC,IAAKP,UAAU,CAACO,KAAI,KAAM,EAAE,EAAE;QACzD,MAAMC,KAAI,GAAIhB,aAAa,CAAC,CAAC;QAC7B,MAAMiB,UAAS,GAAID,KAAK,CAACE,kBAAkB,CAACd,KAAK,CAACW,KAAK,CAAC;QAExD,IAAIE,UAAU,EAAE;UACdL,mBAAmB,CAACG,KAAI,GAAI,2BAA2B;QACzD,OAAO;UACL,MAAMI,OAAM,GAAI;YACdf,KAAK,EAAEA,KAAK,CAACW,KAAK;YAClBV,QAAQ,EAAEA,QAAQ,CAACU;UACrB,CAAC;UAED,IAAI;YACF;YACA,MAAMK,eAAc,GAAIC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;YAC/CH,KAAK,CAACO,OAAO,CAACH,eAAe,CAAC;;YAE9B;YACAI,UAAU,CAAC,MAAM;cACfX,MAAM,CAACY,IAAI,CAAC,QAAQ,CAAC;YACvB,CAAC,EAAE,IAAI,CAAC;UACV,EAAE,OAAOC,KAAK,EAAE;YACd;YACAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;YAC5C;UACF;QACF;MACF;IACF;;IAEA,OAAO;MACLlB,UAAU;MACVJ,KAAK;MACLC,QAAQ;MACRC,gBAAgB;MAChBQ,eAAe;MACfP,aAAa;MACbE,UAAU;MACVC,aAAa;MACbC,oBAAoB;MACpBC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}